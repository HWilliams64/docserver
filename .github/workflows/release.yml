# .github/workflows/release.yml
name: Test, Build and Release

on:
  push:
    branches:
      - '**' # Run tests on all branches
    paths:
      - .github/workflows/**
      - '**/*.go'
      - 'go.mod'
      - 'go.sum'
  pull_request:
    branches:
      - main # Run tests on PRs targeting main
    paths:
      - .github/workflows/**
      - '**/*.go'
      - 'go.mod'
      - 'go.sum'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22' # Specify your Go version
          cache: true
          cache-dependency-path: go.sum

      - name: Run tests
        run: go test ./...

  build:
    name: Build Binaries
    needs: test # Run after tests pass
    if: github.ref == 'refs/heads/main' # Only run on main branch pushes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64] # Add arm64 architecture
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22' # Specify your Go version
          cache: true
          cache-dependency-path: go.sum

      - name: Build
        id: build # Add an ID to reference outputs
        run: |
          OUTPUT_NAME="docserver-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT_NAME="${OUTPUT_NAME}.exe"
          fi
          # Set output for subsequent steps
          echo "OUTPUT_NAME=${OUTPUT_NAME}" >> $GITHUB_OUTPUT
          echo "Building $OUTPUT_NAME..."
          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o "$OUTPUT_NAME" main.go
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}

      - name: Make executable (Linux/Mac)
        # Only run for linux or darwin GOOS
        if: matrix.goos == 'linux' || matrix.goos == 'darwin'
        run: chmod +x ${{ steps.build.outputs.OUTPUT_NAME }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          # Use the same artifact name regardless of OS for easier downloading
          name: docserver-${{ matrix.goos }}-${{ matrix.goarch }}
          # Upload the specific file that was built
          path: ${{ steps.build.outputs.OUTPUT_NAME }}

  release:
    name: Create Release
    needs: build # Run after build finishes
    if: github.ref == 'refs/heads/main' # Only run on main branch pushes
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create releases
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for conventional commits history analysis

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts # Download all artifacts to a directory

      - name: List downloaded artifacts # Optional: for debugging
        run: ls -R artifacts

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.github_token }}
          skip-commit: "true"
          skip-version-file: "true"
          output-file: "false"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          name: ${{ steps.changelog.outputs.tag }} # Use tag for release name
          body: ${{ steps.changelog.outputs.clean_changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: artifacts/**/* # Upload all files from the artifacts directory